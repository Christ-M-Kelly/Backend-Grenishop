// <auto-generated />
using System;
using BackendGrenishop.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendGrenishop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250429092821_UpdateCompteModel")]
    partial class UpdateCompteModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendGrenishop.Modeles.Compte", b =>
                {
                    b.Property<int>("id_compte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_compte"));

                    b.Property<DateTime>("Date_inscription")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasseHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Prénom");

                    b.HasKey("id_compte");

                    b.ToTable("Comptes");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Entreprise", b =>
                {
                    b.Property<int>("EntrepriseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntrepriseID"));

                    b.Property<string>("Nom_Entreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntrepriseID");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Produit", b =>
                {
                    b.Property<int>("ProduitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProduitID"));

                    b.Property<int>("EntrepriseID")
                        .HasColumnType("int");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nombre_Neuf")
                        .HasColumnType("int");

                    b.Property<int>("Nombre_Occasion")
                        .HasColumnType("int");

                    b.Property<decimal>("Prix_Neuf")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Prix_Occasion")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProduitID");

                    b.HasIndex("EntrepriseID");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Produit", b =>
                {
                    b.HasOne("BackendGrenishop.Modeles.Entreprise", "Entreprise")
                        .WithMany()
                        .HasForeignKey("EntrepriseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using BackendGrenishop.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendGrenishop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250429234117_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendGrenishop.Modeles.Commande", b =>
                {
                    b.Property<int>("id_commande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_commande"));

                    b.Property<string>("adresse_livraison")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("date_commande")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("date_reception")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_compte")
                        .HasColumnType("int");

                    b.Property<string>("status_commande")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id_commande");

                    b.HasIndex("date_commande");

                    b.HasIndex("id_compte");

                    b.HasIndex("status_commande");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Compte", b =>
                {
                    b.Property<int>("id_compte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_compte"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("date_inscription")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("id_compte");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Comptes");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.ListeDeSouhaits", b =>
                {
                    b.Property<int>("id_liste")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_liste"));

                    b.Property<int>("id_compte")
                        .HasColumnType("int");

                    b.Property<int>("id_modele")
                        .HasColumnType("int");

                    b.HasKey("id_liste");

                    b.HasIndex("id_compte");

                    b.HasIndex("id_modele");

                    b.ToTable("ListeDeSouhaits");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Marque", b =>
                {
                    b.Property<int>("id_marque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_marque"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id_marque");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Marque");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Modele", b =>
                {
                    b.Property<int>("id_modele")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_modele"));

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("id_marque")
                        .HasColumnType("int");

                    b.Property<int>("nbr_neuf")
                        .HasColumnType("int");

                    b.Property<int>("nbr_occasion")
                        .HasColumnType("int");

                    b.Property<string>("nom_modele")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("prix_neuf")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("prix_occasion")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id_modele");

                    b.HasIndex("id_marque");

                    b.HasIndex("nom_modele");

                    b.ToTable("Modele");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Produit", b =>
                {
                    b.Property<int>("id_produit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_produit"));

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("id_commande")
                        .HasColumnType("int");

                    b.Property<int>("id_modele")
                        .HasColumnType("int");

                    b.HasKey("id_produit");

                    b.HasIndex("Etat");

                    b.HasIndex("id_commande");

                    b.HasIndex("id_modele");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Commande", b =>
                {
                    b.HasOne("BackendGrenishop.Modeles.Compte", "Compte")
                        .WithMany("Commandes")
                        .HasForeignKey("id_compte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.ListeDeSouhaits", b =>
                {
                    b.HasOne("BackendGrenishop.Modeles.Compte", "Compte")
                        .WithMany("ListeDeSouhaits")
                        .HasForeignKey("id_compte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendGrenishop.Modeles.Modele", "Modele")
                        .WithMany("ListeDeSouhaits")
                        .HasForeignKey("id_modele")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Modele", b =>
                {
                    b.HasOne("BackendGrenishop.Modeles.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("id_marque")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Produit", b =>
                {
                    b.HasOne("BackendGrenishop.Modeles.Commande", "Commande")
                        .WithMany("Produits")
                        .HasForeignKey("id_commande")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BackendGrenishop.Modeles.Modele", "Modele")
                        .WithMany("Produits")
                        .HasForeignKey("id_modele")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Commande");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Commande", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Compte", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("ListeDeSouhaits");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("BackendGrenishop.Modeles.Modele", b =>
                {
                    b.Navigation("ListeDeSouhaits");

                    b.Navigation("Produits");
                });
#pragma warning restore 612, 618
        }
    }
}
